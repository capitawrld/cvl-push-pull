DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminEligibleProposal`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminEligibleProposal`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT, IN loanTypeId INT)
BEGIN

	DECLARE vb_role_id INT;
	DECLARE vb_branch_id INT;
	DECLARE vb_org_id INT;
	-- DECLARE @vb_query VARCHAR(2000);
	SELECT `user_role_id`,`branch_id`,`user_org_id` INTO vb_role_id,vb_branch_id,vb_org_id FROM users.`users`  WHERE `user_id` = userId;
	-- SET vb_role_id = (SELECT `user_role_id` FROM users.`users`  WHERE `user_id` = userId);
	-- SET vb_branch_id = (SELECT `branch_id` FROM users.`users`  WHERE `user_id` = userId);

	SET @vb_query = CONCAT("SELECT pd.application_id, cl.user_id, fs.name, usr.email, usr.mobile, cl.`modified_date`, pd.branch_id,
		pd.el_amount, pd.el_tenure, pd.el_roi, pd.emi, pd.processing_fee, branch.name AS branchname,
		branch.contact_person_name, branch.telephone_no, branch.contact_person_number, org.organisation_name,
		lam.application_code, branch.code, branch.street_name, (SELECT state_name FROM `one_form`.`state` s
		WHERE s.id = branch.state_id), (SELECT city_name FROM `one_form`.`city` c WHERE c.id = branch.city_id), branch.premises_no,
		(SELECT product_id FROM `loan_application`.`fp_product_master` pm WHERE pm.fp_product_id = pd.fp_product_id), branch.contact_person_email,
		(SELECT COUNT(id) FROM `users`.`campaign_details` cd WHERE cd.user_id = cl.user_id AND cd.is_active = TRUE),cl.`gstin`,
		product.`name` AS productName,product.`is_active` AS productActive,proStatus.`status` AS proposalStatus,pd.fp_product_id AS fpProductId,appcnt.`organisation_name` AS companyname,
		cl.`wc_renewal_status`,IF(cl.`wc_renewal_status` = 2,IF(prm.`enhancement_amount` IS NULL,'Same Limit','Enhancement Limit'),'') AS enhLimit,
		(SELECT COUNT(*) FROM loan_application.proposal_details WHERE proposal_status_id IN(5,11,13) AND user_org_id <> pd.`user_org_id` AND application_id = pd.`application_id`) AS is_sactioned_from_other , ");
		IF (loanTypeId = 1)THEN
			SET @vb_query = CONCAT( @vb_query , " CASE WHEN prm.purpose_of_loan_id = 1 THEN 'Term Loan' WHEN prm.purpose_of_loan_id = 2 THEN 'Working Capital' ELSE 'NA' END AS loanType");
		END IF;

		IF (loanTypeId = 3 OR loanTypeId = 7) THEN
			SET @vb_query = CONCAT( @vb_query , " (CASE WHEN cl.loan_type_id = 7 THEN
			'Personal Loan' WHEN cl.loan_type_id = 3 THEN 'Home Loan' ELSE 'NA' END) AS loanType ") ;
		END IF;

		SET @vb_query = CONCAT( @vb_query , " FROM `loan_application`.`proposal_details` pd
		LEFT JOIN `connect`.`connect_log` cl ON cl.application_id = pd.application_id AND cl.`proposal_id` = pd.id
		LEFT JOIN `loan_application`.`proposal_status_master` proStatus ON proStatus.`id` = pd.`proposal_status_id`
		LEFT JOIN `loan_application`.`fp_product_master` product ON product.`fp_product_id` = pd.`fp_product_id`
		LEFT JOIN `users`.`users` usr ON usr.user_id = cl.user_id
		LEFT JOIN `users`.`fund_seeker_details` fs ON fs.user_id = usr.user_id
		LEFT JOIN  `users`.`branch_master` branch ON branch.id = pd.branch_id
		LEFT JOIN `users`.`user_organisation_master` org ON org.user_org_id = pd.user_org_id
		LEFT JOIN loan_application.`application_proposal_mapping` lam ON lam.`application_id` = pd.`application_id` AND lam.`proposal_id` = pd.`id`
		LEFT JOIN `loan_application`.`fs_corporate_applicant_details` appcnt ON appcnt.application_id = pd.application_id AND appcnt.`proposal_mapping_id` = pd.`id`
		LEFT JOIN `loan_application`.`fs_corporate_primary_details` prm ON prm.`application_id` = pd.`application_id`
		WHERE pd.user_org_id =", vb_org_id," AND pd.is_active = TRUE
		AND (cl.`In_principle_date` BETWEEN '",fromDate,"' AND '",toDate,"') ");

	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT( @vb_query , " AND cl.stage_id IN (7,9)") ;
	END IF;
	IF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT( @vb_query , " AND cl.stage_id IN (210,211) AND cl.loan_type_id =", loanTypeId, "") ;
	END IF;

	IF (vb_role_id = 8 OR vb_role_id = 9) THEN
		SET @vb_query = CONCAT(@vb_query," AND pd.branch_id = ",vb_branch_id, " ORDER BY pd.id DESC");
	ELSEIF vb_role_id = 5 THEN
		SET @vb_query = CONCAT(@vb_query," ORDER BY pd.id DESC");
	ELSE
		SET @vb_query = "select '' from dual";
	END IF;
	-- select @vb_query from dual;
	PREPARE stmt1 FROM @vb_query;
	EXECUTE stmt1;
    END$$

DELIMITER ;


DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `getSerachProposalListByRoleSP`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `getSerachProposalListByRoleSP`(IN orgId INT,IN searchString VARCHAR(100),IN userId INT,IN listLimit INT,IN busiTypeId INT,IN branchId INT)
BEGIN
	SELECT `user_role_id` INTO @userRoleId FROM `users`.`users` WHERE `user_id`=userId;

	IF (@userRoleId = 9) THEN -- CHECKER

		SELECT DISTINCT(prop.`application_id`),prop.`id`,prop.`fp_product_id`,loan.`application_code`,
		appl.`organisation_name`,prop.`el_amount`,product.`name`,prop.`created_date`,loan.`business_type_id`,
		prop.`proposal_status_id`,loan.`product_id` AS pro,
		CONCAT(retail.first_name,' ',retail.last_name) AS pl_user_name,
		branch.name AS branchName,branch.code,
		((SELECT COUNT(*) FROM loan_application.proposal_details WHERE proposal_status_id IN(5,11,13) AND user_org_id <> prop.`user_org_id` AND application_id = prop.`application_id`)) AS is_sactioned_from_other
		FROM loan_application.`proposal_details` prop
		-- LEFT JOIN loan_application.`fs_loan_application_master` loan ON loan.`application_id` = prop.`application_id`
		LEFT JOIN loan_application.`application_proposal_mapping` loan ON loan.`application_id` = prop.`application_id` AND loan.`proposal_id` = prop.`id`
		LEFT JOIN loan_application.`fs_corporate_applicant_details` appl ON appl.`application_id` = prop.`application_id` AND appl.`proposal_mapping_id` = prop.`id`
		LEFT JOIN `loan_application`.`fp_product_master` product ON product.`fp_product_id` = prop.`fp_product_id`
		LEFT JOIN users.`branch_master` branch ON branch.id = prop.`branch_id`
		LEFT JOIN fs_retail_applicant_details AS retail ON retail.application_id = loan.application_id AND retail.proposal_mapping_id = prop.id
		WHERE prop.`is_active` = TRUE
			AND (loan.`application_code` LIKE CONCAT('%', searchString , '%') OR  appl.`organisation_name` LIKE CONCAT('%', searchString , '%')
			OR retail.first_name LIKE CONCAT('%', searchString , '%') OR retail.middle_name LIKE CONCAT('%', searchString , '%')
			OR retail.last_name LIKE CONCAT('%', searchString , '%')) AND prop.`user_org_id` = orgId
			AND prop.`branch_id` = branchId
			AND loan.`business_type_id`=busiTypeId
			ORDER BY prop.`created_date` DESC LIMIT listLimit;

	ELSEIF (@userRoleId = 12) THEN -- SMECC

		SELECT DISTINCT(prop.`application_id`),prop.`id`,prop.`fp_product_id`,loan.`application_code`,appl.`organisation_name`,prop.`el_amount`,product.`name`,prop.`created_date`,loan.`business_type_id`,prop.`proposal_status_id`,loan.`product_id` AS pro,
		CONCAT(retail.first_name,' ',retail.last_name) AS pl_user_name,
		branch.name AS branchName,branch.code,
		((SELECT COUNT(*) FROM loan_application.proposal_details WHERE proposal_status_id IN(5,11,13) AND user_org_id <> prop.`user_org_id` AND application_id = prop.`application_id`)) AS is_sactioned_from_other
		FROM loan_application.`proposal_details` prop
		-- LEFT JOIN loan_application.`fs_loan_application_master` loan ON loan.`application_id` = prop.`application_id`
		LEFT JOIN loan_application.`application_proposal_mapping` loan ON loan.`application_id` = prop.`application_id` AND loan.`proposal_id` = prop.`id`
		LEFT JOIN loan_application.`fs_corporate_applicant_details` appl ON appl.`application_id` = prop.`application_id` AND appl.`proposal_mapping_id` = prop.`id`
		LEFT JOIN `loan_application`.`fp_product_master` product ON product.`fp_product_id` = prop.`fp_product_id`
		LEFT JOIN users.`branch_master` branch ON branch.id = prop.`branch_id`
		LEFT JOIN fs_retail_applicant_details AS retail ON retail.application_id = loan.application_id AND retail.proposal_mapping_id = prop.id
		WHERE prop.`is_active` = TRUE AND (loan.`application_code` LIKE CONCAT('%', searchString , '%') OR  appl.`organisation_name` LIKE CONCAT('%', searchString , '%'))
			AND prop.`user_org_id` = orgId AND prop.`branch_id` IN (SELECT `branch_master_id` FROM users.`user_branch_mapping` WHERE `user_id` = userId AND `is_active` = TRUE)
			AND loan.`business_type_id`=busiTypeId
			ORDER BY prop.`created_date` DESC LIMIT listLimit;

	ELSEIF (@userRoleId = 5) THEN -- HO

		SELECT DISTINCT (prop.`application_id`),prop.`id`,prop.`fp_product_id`,loan.`application_code`,appl.`organisation_name`,prop.`el_amount`,product.`name`,
		prop.created_date,loan.`business_type_id`,prop.`proposal_status_id`,loan.`product_id` AS prod,
		CONCAT(retail.first_name,' ',retail.last_name) AS pl_user_name,
		branch.name AS branchName,branch.code,
		((SELECT COUNT(*) FROM loan_application.proposal_details WHERE proposal_status_id IN(5,11,13) AND user_org_id <> prop.`user_org_id` AND application_id = prop.`application_id`)) AS is_sactioned_from_other
		FROM loan_application.`proposal_details` prop
		-- LEFT JOIN loan_application.`fs_loan_application_master` loan ON loan.`application_id` = prop.`application_id`
		LEFT JOIN loan_application.`application_proposal_mapping` loan ON loan.`application_id` = prop.`application_id` AND loan.`proposal_id` = prop.`id`
		LEFT JOIN loan_application.`fs_corporate_applicant_details` appl ON appl.`application_id` = prop.`application_id`
		LEFT JOIN users.`branch_master` branch ON branch.id = prop.`branch_id`
		LEFT JOIN `loan_application`.`fp_product_master` product ON product.`fp_product_id` = prop.`fp_product_id`
		LEFT JOIN fs_retail_applicant_details AS retail ON retail.application_id = loan.application_id AND retail.proposal_mapping_id = prop.id
		WHERE prop.`is_active` = TRUE
			AND (loan.`application_code` LIKE CONCAT('%', searchString , '%')
			OR  appl.`organisation_name` LIKE CONCAT('%', searchString , '%')
			OR retail.first_name LIKE CONCAT('%', searchString , '%')
			OR retail.middle_name LIKE CONCAT('%', searchString , '%')
			OR retail.last_name LIKE CONCAT('%', searchString , '%'))
			AND prop.`user_org_id` = orgId
			AND loan.`business_type_id`=busiTypeId
			ORDER BY prop.`created_date` DESC LIMIT listLimit;

	END IF;
  END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spRetailCheckPANAlreadyExist`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spRetailCheckPANAlreadyExist`(IN typeId INT,IN selectedLoanTypeId INT,IN applicationId BIGINT(20),IN panNumber VARCHAR(50),OUT loanType INTEGER,OUT message VARCHAR(250))
BEGIN
	DECLARE vb_inprinciple_date_range INT;
	DECLARE vb_loan_type INT;
	DECLARE vb_user_email VARCHAR(100);
	DECLARE vb_connect_stage INT;
	DECLARE vb_connect_status INT;
	DECLARE vb_count INT DEFAULT 0;
	DECLARE vb_connect_id INT;

	SELECT CAST(`value` AS UNSIGNED) INTO vb_inprinciple_date_range FROM `loan_application`.`common_properties` WHERE `key` = 'CONNECT_RETAIL_NEW_APPLICATION_DATE_RANGE';

	IF (typeId = 1) THEN -- ITR CHECK POINT
		SELECT JSON_ARRAYAGG(jsonObj) INTO @ids FROM (
			SELECT con.`id` AS jsonObj
			FROM connect.`connect_log` con
			LEFT JOIN `loan_application`.`fs_retail_applicant_details` fs ON fs.`application_id` = con.`application_id` AND fs.`proposal_mapping_id` IS NULL
			LEFT JOIN `loan_application`.`fs_retail_co_applicant_details` coApp ON coApp.`application_id` = con.`application_id` AND coApp.`proposal_mapping_id` IS NULL AND coApp.`is_income_consider` = TRUE AND coApp.`is_active` = TRUE
			WHERE (UPPER(fs.`pan`) = UPPER(panNumber) OR UPPER(coApp.`pan`) = UPPER(panNumber))
			AND ((((con.`stage_id` IN (207,509) AND con.`status` = 6) OR (con.`stage_id` IN (208,510) AND con.`status` = 3)) AND (con.`modified_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))
			OR (con.`stage_id` IN (210,211,512,513) AND (con.`In_principle_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))) GROUP BY con.`loan_type_id` ORDER BY con.`modified_date` DESC)
		AS main;

		IF (JSON_LENGTH(@ids) = 1) THEN

			SET vb_connect_id  = JSON_EXTRACT(@ids,CONCAT('$[',0,']'));

			SELECT con.`loan_type_id`,us.`email`,con.`stage_id` INTO vb_loan_type,vb_user_email,vb_connect_stage
			FROM connect.`connect_log` con
			LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
			WHERE con.id = vb_connect_id;

			SET loanType = vb_loan_type;

			IF (vb_loan_type = 7) THEN
				SET @loanTypeName = "Personal Loan";
				SET @diffloanTypeName = "Home Loan";
			ELSE
				SET @loanTypeName = "Home Loan";
				SET @diffloanTypeName = "Personal Loan";
			END IF;

			SET @msg = CONCAT("You have taken ",@loanTypeName," on same PAN, so you are only eligible for ",@diffloanTypeName,". Do you want to apply for ",@diffloanTypeName," ?");
			SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
		ELSEIF (JSON_LENGTH(@ids) > 1) THEN
			SET loanType = -1;
			SET @msg = CONCAT("It seems that you have already availed Home Loan and Personal Loan. Please try after some time to again apply for Retail Loans.");
			SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
		END IF;


	ELSEIF (typeId = 2) THEN -- LOAN SELECTION CHECK POINT

		SELECT JSON_ARRAYAGG(jsonObj) INTO @ids FROM (
		SELECT con.`id` AS jsonObj
		FROM connect.`connect_log` con
		LEFT JOIN `loan_application`.`fs_retail_applicant_details` fs ON fs.`application_id` = con.`application_id` AND fs.`proposal_mapping_id` IS NULL
		LEFT JOIN `loan_application`.`fs_retail_co_applicant_details` coApp ON coApp.`application_id` = con.`application_id` AND coApp.`proposal_mapping_id` IS NULL AND coApp.`is_income_consider` = TRUE AND coApp.`is_active` = TRUE
		LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id` WHERE
		(UPPER(fs.`pan`) IN (
			SELECT `pan` FROM `loan_application`.`fs_retail_applicant_details` WHERE `application_id` = applicationId AND pan IS NOT NULL
			UNION ALL
			SELECT co.`pan` FROM `loan_application`.`fs_retail_co_applicant_details` co WHERE co.`application_id` = applicationId AND co.`is_active` = TRUE AND co.`pan` IS NOT NULL)
		OR UPPER(coApp.`pan`) IN (
			SELECT `pan` FROM `loan_application`.`fs_retail_applicant_details` WHERE `application_id` = applicationId AND pan IS NOT NULL
			UNION ALL
			SELECT co.`pan` FROM `loan_application`.`fs_retail_co_applicant_details` co WHERE co.`application_id` = applicationId AND co.`is_active` = TRUE AND co.`pan` IS NOT NULL))
		AND ((((con.`stage_id` IN (207,509) AND con.`status` = 6) OR (con.`stage_id` IN (208,510,207,509) AND con.`status` = 3)) AND (con.`modified_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))
		OR (con.`stage_id` IN (210,211,512,513) AND (con.`In_principle_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))) GROUP BY con.`loan_type_id` ORDER BY con.`modified_date` DESC)
		AS main;

		IF (JSON_LENGTH(@ids) = 1) THEN

			SET vb_connect_id  = JSON_EXTRACT(@ids,CONCAT('$[',0,']'));

			SELECT con.`loan_type_id`,us.`email`,con.`stage_id`,con.`status` INTO vb_loan_type,vb_user_email,vb_connect_stage,vb_connect_status
			FROM connect.`connect_log` con
			LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
			WHERE con.id = vb_connect_id;

			IF (vb_loan_type > 0 AND vb_loan_type = selectedLoanTypeId) THEN
				SET loanType = vb_loan_type;

				IF (vb_loan_type = 7) THEN
					SET @loanTypeName = "Personal Loan";
					SET @diffloanTypeName = "Home Loan";
				ELSE
					SET @loanTypeName = "Home Loan";
					SET @diffloanTypeName = "Personal Loan";
				END IF;

				IF (vb_connect_stage = 208 OR vb_connect_stage = 510) THEN
					IF (selectedLoanTypeId = 7) THEN
						SET @selectedLoan = "Personal Loan";
					ELSE
						SET @selectedLoan = "Home Loan";
					END IF;

					SET @msg = CONCAT("It seems that your " ,@selectedLoan," application is already on Bank Selection page with E-mail id - ",`emailEncrypt`(vb_user_email)
						,". Request you to complete that application first to ignore duplication entries.");
					SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
				ELSE
					IF ((vb_connect_stage = 207 OR vb_connect_stage = 509) AND vb_connect_status = 3) THEN
						SET @msg = CONCAT("It seems that your " ,@selectedLoan," application is already on Loan Requirement page with E-mail id - ",`emailEncrypt`(vb_user_email)
						,". Request you to complete that application first to ignore duplication entries.");
						SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
					ELSE
						SET @msg = CONCAT("You have taken ",@loanTypeName," on same PAN, so you are only eligible for ",@diffloanTypeName,". Do you want to apply for ",@diffloanTypeName," ?");
						SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
					END IF;

				END IF;
			END IF;
		ELSEIF (JSON_LENGTH(@ids) > 1) THEN
			SET loanType = -1;
			SET @msg = CONCAT("It seems that you have already availed Home Loan and Personal Loan. Please try after some time to again apply for Retail Loans.");
			SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
		END IF;



	ELSEIF (typeId = 3) THEN -- MATCHES PAGE CHECK POINT

		SELECT JSON_ARRAYAGG(jsonObj) INTO @ids FROM (
		SELECT con.`id` AS jsonObj
		FROM connect.`connect_log` con
		LEFT JOIN `loan_application`.`fs_retail_applicant_details` fs ON fs.`application_id` = con.`application_id` AND fs.`proposal_mapping_id` IS NULL
		LEFT JOIN `loan_application`.`fs_retail_co_applicant_details` coApp ON coApp.`application_id` = con.`application_id` AND coApp.`proposal_mapping_id` IS NULL  AND coApp.`is_income_consider` = TRUE AND coApp.`is_active` = TRUE
		LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id` WHERE
		(UPPER(fs.`pan`) IN (
			SELECT `pan` FROM `loan_application`.`fs_retail_applicant_details` WHERE `application_id` = applicationId AND pan IS NOT NULL
			UNION ALL
			SELECT co.`pan` FROM `loan_application`.`fs_retail_co_applicant_details` co WHERE co.`application_id` = applicationId AND co.`is_active` = TRUE AND co.`pan` IS NOT NULL)
		OR UPPER(coApp.`pan`) IN (
			SELECT `pan` FROM `loan_application`.`fs_retail_applicant_details` WHERE `application_id` = applicationId AND pan IS NOT NULL
			UNION ALL
			SELECT co.`pan` FROM `loan_application`.`fs_retail_co_applicant_details` co WHERE co.`application_id` = applicationId AND co.`is_active` = TRUE AND co.`pan` IS NOT NULL))
		AND ((((con.`stage_id` IN (207,509) AND con.`status` = 6) OR (con.`stage_id` IN (208,510) AND con.`status` = 3)) AND (con.`modified_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))
		OR (con.`stage_id` IN (210,211,512,513) AND (con.`In_principle_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW())))
		AND con.`application_id` != applicationId
		GROUP BY con.`loan_type_id` ORDER BY con.`modified_date` DESC)
		AS main;

		IF (JSON_LENGTH(@ids) = 1) THEN

			SET vb_connect_id  = JSON_EXTRACT(@ids,CONCAT('$[',0,']'));

			SELECT con.`loan_type_id`,us.`email`,con.`stage_id` INTO vb_loan_type,vb_user_email,vb_connect_stage
			FROM connect.`connect_log` con
			LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
			WHERE con.id = vb_connect_id;

			IF (vb_loan_type > 0) THEN
				SET loanType = vb_loan_type;

				IF (vb_loan_type = 7) THEN
					SET @loanTypeName = "Personal Loan";
					SET @diffloanTypeName = "Home Loan";
				ELSE
					SET @loanTypeName = "Home Loan";
					SET @diffloanTypeName = "Personal Loan";
				END IF;

				IF (vb_connect_stage = 208 OR vb_connect_stage = 510) THEN
					IF (selectedLoanTypeId = 7) THEN
						SET @selectedLoan = "Personal Loan";
					ELSE
						SET @selectedLoan = "Home Loan";
					END IF;

					SET @msg = CONCAT("It seems that your " ,@selectedLoan," application is already on Bank Selection page with E-mail id - ",`emailEncrypt`(vb_user_email)
						,". Request you to complete that application first to ignore duplication entries.");
					SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
				ELSE
					SET @msg = CONCAT("You have taken ",@loanTypeName," on same PAN, so you are only eligible for ",@diffloanTypeName,".");
					SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
				END IF;
			END IF;
		ELSEIF (JSON_LENGTH(@ids) > 1) THEN
			SET loanType = -1;
			SET @msg = CONCAT("It seems that you have already availed Home Loan and Personal Loan. Please try after some time to again apply for Retail Loans.");
			SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
		END IF;



	ELSEIF (typeId = 4) THEN -- CHECK WHEN ADD CO-APPLICANT

		SELECT JSON_ARRAYAGG(jsonObj) INTO @ids FROM (
		SELECT con.`id` AS jsonObj
		FROM connect.`connect_log` con
		LEFT JOIN `loan_application`.`fs_retail_applicant_details` fs ON fs.`application_id` = con.`application_id` AND fs.`proposal_mapping_id` IS NULL
		LEFT JOIN `loan_application`.`fs_retail_co_applicant_details` coApp ON coApp.`application_id` = con.`application_id` AND coApp.`proposal_mapping_id` IS NULL AND coApp.`is_income_consider` = TRUE AND coApp.`is_active` = TRUE
		LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
		WHERE (UPPER(fs.`pan`) = UPPER(panNumber) OR UPPER(coApp.`pan`) = UPPER(panNumber))
		AND ((((con.`stage_id` IN (207,509) AND con.`status` = 6) OR (con.`stage_id` IN (208,510) AND con.`status` = 3)) AND (con.`modified_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))
		OR (con.`stage_id` IN (210,211,512,513) AND (con.`In_principle_date` BETWEEN DATE_SUB(NOW(), INTERVAL vb_inprinciple_date_range DAY) AND NOW()))) GROUP BY con.`loan_type_id` ORDER BY con.`modified_date` DESC)
		AS main;

		IF (JSON_LENGTH(@ids) = 1) THEN

			SET vb_connect_id  = JSON_EXTRACT(@ids,CONCAT('$[',0,']'));

			SELECT con.`loan_type_id`,us.`email`,con.`stage_id` INTO vb_loan_type,vb_user_email,vb_connect_stage
			FROM connect.`connect_log` con
			LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
			WHERE con.id = vb_connect_id;

			IF (vb_loan_type > 0) THEN
				SET loanType = vb_loan_type;

				IF (vb_loan_type = 7) THEN
					SET @loanTypeName = "Personal Loan";
				ELSE
					SET @loanTypeName = "Home Loan";
				END IF;

				SET message = CONCAT("It seems that added co-applicant has already availed ",@loanTypeName," on PSBloans platform, hence he/she can not be added again as Co-applicant. The same person can be added as Co-applicant if his/her income is not considered for Income Eligibility.");
				-- SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
			ELSE
				SELECT COUNT(*) INTO vb_count FROM `loan_application`.`fs_retail_applicant_details` fs WHERE fs.`pan` = panNumber AND fs.`application_id` = applicationId AND fs.`is_active` = TRUE;
				IF (vb_count > 0) THEN
					SET loanType = 100;
					SET message = CONCAT("It seems you have added PAN are already submited in applicant details, Please enter different PAN details");
					-- SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
				ELSE
					SELECT COUNT(*) INTO vb_count FROM `loan_application`.`fs_retail_co_applicant_details` co WHERE co.`application_id` = applicationId AND co.`is_active` = TRUE AND co.`pan` = panNumber;
					IF (vb_count > 0) THEN
						SET loanType = 100;
						SET message = CONCAT("It seems you have added PAN are already submited in another Co-Applicant details, Please enter different PAN details");
						-- SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
					END IF;
				END IF;

			END IF;
		ELSEIF (JSON_LENGTH(@ids) > 1) THEN
			SET loanType = -1;
			SET message = CONCAT("It seems that added co-applicant has already availed Home Loan and Personal Loan.");
			-- SET message = JSON_OBJECT('message',@msg, 'loanType',loanType);
		END IF;

	END IF;



    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spApplicationInactive`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spApplicationInactive`(IN applicationId BIGINT(20),IN msg VARCHAR(100))
BEGIN
	IF (msg IS NULL OR msg = '') THEN
		SET msg = "Application is deleted from Ristict Loan on same Pan!!";
	END IF;
	UPDATE connect.`connect_log` SET `status` = 5,`modified_date` = NOW(),`message` = msg WHERE `application_id` = applicationId;
	-- UPDATE `loan_application`.`fs_loan_application_master` SET `is_active` = FALSE, `modified_date` = NOW() WHERE `application_id` = applicationId;
END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminNotEligibleBankSpecificProposal`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminNotEligibleBankSpecificProposal`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT, IN loanTypeId INT)
BEGIN

	DECLARE vb_org_id INT;
	SELECT `user_org_id` INTO vb_org_id FROM users.`users`  WHERE `user_id` = userId;

	IF (loanTypeId =1) THEN

		SELECT con.`application_id`,con.`gstin`,us.`email`,us.`mobile`,fs.`NAME`,IF(con.`wc_renewal_status` = 2,'Renewal','New') AS `status`,corp.`organisation_name`,con.`modified_date`
		,IF(con.`wc_renewal_status` = 2,IF(prm.`enhancement_amount` IS NULL,'Same Limit','Enhancement Limit'),'') AS enhLimit,
		(CASE WHEN prm.purpose_of_loan_id = 1 THEN 'Term Loan' WHEN prm.purpose_of_loan_id = 2
		THEN 'Working Capital' ELSE 'NA' END) AS loanType
		FROM connect.`connect_log` con
		LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
		LEFT JOIN users.`fund_seeker_details` fs ON fs.`user_id` = con.`user_id`
		LEFT JOIN `loan_application`.`fs_corporate_applicant_details` corp ON corp.`application_id` = con.`application_id` AND corp.`proposal_mapping_id` IS NULL
		LEFT JOIN `loan_application`.`fs_corporate_primary_details` prm ON prm.`application_id` = con.`application_id`
		LEFT JOIN users.`campaign_details` camp  ON camp.`user_id` = con.`user_id`
		LEFT JOIN users.`user_organisation_master` org  ON org.`organisation_code` = camp.`code`
		WHERE con.`stage_id` = 4 AND con.`status` = 6
		AND camp.`is_active` = TRUE AND con.`modified_date` BETWEEN fromDate AND toDate
		AND org.`user_org_id` = vb_org_id;

	END IF;

	IF (loanTypeId = 3 OR loanTypeId = 7) THEN

		SELECT con.`application_id`,con.`gstin`,us.`email`,us.`mobile`,fs.`NAME`,IF(con.`wc_renewal_status` = 2,'Renewal','New') AS `status`,CONCAT(corp.`first_name`,' ',corp.`middle_name`,' ',corp.`last_name`),
		con.`modified_date` ,'NA', ( CASE WHEN con.loan_type_id = 7 THEN 'Personal Loan' WHEN con.loan_type_id = 3 THEN 'Home Loan' ELSE 'NA' END) AS loanType
		FROM connect.`connect_log` con
		LEFT JOIN users.`users` us ON us.`user_id` = con.`user_id`
		LEFT JOIN users.`fund_seeker_details` fs ON fs.`user_id` = con.`user_id`
		LEFT JOIN `loan_application`.`fs_retail_applicant_details` corp ON corp.`application_id` = con.`application_id` AND corp.`proposal_mapping_id` IS NULL
		LEFT JOIN users.`campaign_details` camp  ON camp.`user_id` = con.`user_id`
		LEFT JOIN users.`user_organisation_master` org  ON org.`organisation_code` = camp.`code`
		WHERE con.`stage_id` = 207 AND con.`status` = 6
		AND camp.`is_active` = TRUE AND con.`modified_date` BETWEEN fromDate AND toDate
		AND org.`user_org_id` = vb_org_id AND con.loan_type_id = loanTypeId;

	END IF ;

    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminNotEligibleProposal`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminNotEligibleProposal`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT, IN loanTypeId INT)
BEGIN

	DECLARE vb_org_id INT;
	SELECT `user_org_id` INTO vb_org_id FROM users.`users`  WHERE `user_id` = userId;
	IF (loanTypeId = 1) THEN

		SELECT con.user_id,con.application_id,us.sign_up_date,cpPri.loan_amount,camp.code,usr.user_org_id,
		(IF(ISNULL(usr.user_org_id),0,1)) AS isFromCampaign,fsDetails.NAME,us.email,us.mobile,
		(IF(ISNULL(inlg.user_org_id),0,1)) AS SelectManualBrach,con.modified_date,cpApp.`organisation_name`,
		(CASE WHEN cpPri.purpose_of_loan_id = 1 THEN 'Term Loan' WHEN cpPri.purpose_of_loan_id = 2
		THEN 'Working Capital' ELSE 'NA' END) AS loanType
		FROM connect.connect_log con
		LEFT JOIN users.users us ON con.user_id = us.user_id
		LEFT JOIN loan_application.fs_corporate_primary_details cpPri ON cpPri.application_id = con.application_id
		LEFT JOIN loan_application.`fs_corporate_applicant_details` cpApp ON cpApp.application_id = con.application_id
		LEFT JOIN users.campaign_details camp ON camp.user_id = con.user_id AND camp.`is_active` = TRUE
		LEFT JOIN users.user_organisation_master usr ON usr.organisation_code=camp.code AND usr.user_org_id = vb_org_id
		LEFT JOIN users.fund_seeker_details fsDetails ON fsDetails.user_id = con.user_id
		LEFT JOIN loan_application.ineligible_proposal_details inlg ON inlg.application_id = con.application_id
		WHERE con.modified_date BETWEEN fromDate AND toDate AND con.business_type_id = 1
		AND con.stage_id= 4 AND con.status= 6 GROUP BY con.application_id;
	END IF;

	IF (loanTypeId = 3 OR loanTypeId = 7) THEN

		SELECT con.user_id,con.application_id,us.sign_up_date,cpPri.loan_amount,camp.code,usr.user_org_id,
		(IF(ISNULL(usr.user_org_id),0,1)) AS isFromCampaign,fsDetails.NAME,us.email,us.mobile,
		(IF(ISNULL(inlg.user_org_id),0,1)) AS SelectManualBrach,con.modified_date,cpApp.`organisation_name`,
		( CASE WHEN con.loan_type_id = 7 THEN
		'Personal Loan' WHEN con.loan_type_id = 3 THEN 'Home Loan' ELSE 'NA' END) AS loanType
		FROM connect.connect_log con
		LEFT JOIN users.users us ON con.user_id = us.user_id
		LEFT JOIN loan_application.fs_corporate_primary_details cpPri ON cpPri.application_id = con.application_id
		LEFT JOIN loan_application.`fs_corporate_applicant_details` cpApp ON cpApp.application_id = con.application_id
		LEFT JOIN users.campaign_details camp ON camp.user_id = con.user_id AND camp.`is_active` = TRUE
		LEFT JOIN users.user_organisation_master usr ON usr.organisation_code=camp.code AND usr.user_org_id = vb_org_id
		LEFT JOIN users.fund_seeker_details fsDetails ON fsDetails.user_id = con.user_id
		LEFT JOIN loan_application.ineligible_proposal_details inlg ON inlg.application_id = con.application_id
		WHERE con.modified_date BETWEEN fromDate AND toDate AND con.`loan_type_id` = loanTypeId
		AND con.stage_id= 207 AND con.status= 6 GROUP BY con.application_id;

	END IF;

    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminOfflineProposal`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminOfflineProposal`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT, IN loanTypeId INT)
BEGIN

	DECLARE vb_role_id INT;
	DECLARE vb_branch_id INT;
	DECLARE vb_org_id INT;
	SELECT `user_role_id`,`branch_id`,`user_org_id` INTO vb_role_id,vb_branch_id,vb_org_id FROM users.`users` WHERE `user_id` = userId;

	SET @vb_query = CONCAT("SELECT ipd.application_id, cl.user_id, fs.name, usr.email, usr.mobile, ipd.created_date, ipd.branch_id, branch.name AS branchname, branch.contact_person_name,
		branch.telephone_no, branch.contact_person_number, org.organisation_name, lam.application_code, branch.code, branch.street_name,
		stat.`state_name`, cit.`city_name`,
		branch.premises_no, branch.contact_person_email,");

	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT(@vb_query," coApp.organisation_name AS companyName ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT(@vb_query," CONCAT(coApp.`first_name`,' ',coApp.`middle_name`,' ',coApp.`last_name`) ");
	END IF;

	IF (loanTypeId = 1)THEN
		SET @vb_query = CONCAT( @vb_query , " ,CASE WHEN prm.purpose_of_loan_id = 1 THEN 'Term Loan' WHEN prm.purpose_of_loan_id = 2 THEN 'Working Capital' ELSE 'NA' END AS loanType");
	END IF;

	IF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT( @vb_query , " ,(CASE WHEN cl.loan_type_id = 7 THEN
			'Personal Loan' WHEN cl.loan_type_id = 3 THEN 'Home Loan' ELSE 'NA' END) AS loanType ") ;
	END IF;

	SET @vb_query = CONCAT(@vb_query,",IF(cl.`wc_renewal_status` = 2,'Renewal','New') AS rewType,
		IF(camp.`id` IS NULL,'Market Place','Bank Specific') AS source
		FROM `loan_application`.`ineligible_proposal_details` ipd ");
	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT(@vb_query, "LEFT JOIN `loan_application`.`fs_corporate_applicant_details` coApp ON coApp.application_id = ipd.application_id and coApp.`proposal_mapping_id` IS NULL
			 LEFT JOIN `loan_application`.`fs_corporate_primary_details` prm ON prm.`application_id` = ipd.application_id ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT(@vb_query, "LEFT JOIN `loan_application`.fs_retail_applicant_details coApp ON coApp.application_id = ipd.application_id and coApp.`proposal_mapping_id` IS NULL");
	END IF;

	SET @vb_query = CONCAT(@vb_query, " LEFT JOIN `connect`.`connect_log` cl ON cl.application_id = ipd.application_id and cl.`proposal_id` IS NULL
		LEFT JOIN `users`.`users` usr ON usr.user_id = cl.user_id
		LEFT JOIN `users`.`fund_seeker_details` fs ON fs.user_id = usr.user_id
		LEFT JOIN `users`.`branch_master` branch ON branch.id = ipd.branch_id
		LEFT JOIN `users`.`user_organisation_master` org ON org.user_org_id = ipd.user_org_id
		LEFT JOIN `loan_application`.`fs_loan_application_master` lam ON lam.application_id = ipd.application_id
		LEFT JOIN `one_form`.`state` stat ON stat.id = branch.`state_id`
		LEFT JOIN `one_form`.`city` cit ON cit.id = branch.`city_id`
		LEFT JOIN users.`campaign_details` camp ON camp.`user_id` = cl.`user_id` AND camp.`is_active` = TRUE
		WHERE ipd.is_active = TRUE AND ipd.user_org_id = '",vb_org_id,"' AND (ipd.created_date BETWEEN '",fromDate,"' AND '",toDate,"') ");

	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT(@vb_query, " AND cl.`business_type_id` = 1 ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT(@vb_query, " AND cl.`loan_type_id` = ", loanTypeId);
	END IF;


	IF (vb_role_id = 8 OR vb_role_id = 9) THEN
		SET @vb_query = CONCAT(@vb_query," AND ipd.branch_id = ",vb_branch_id, " GROUP BY ipd.application_id ORDER BY ipd.id DESC");
	ELSEIF vb_role_id = 5 THEN
		SET @vb_query = CONCAT(@vb_query," GROUP BY ipd.application_id ORDER BY ipd.id DESC");
	ELSE
		SET @vb_query = "select '' from dual";
	END IF;

	-- select @vb_query from dual;
	PREPARE stmt1 FROM @vb_query;
	EXECUTE stmt1;
    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminOfflineProposal`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminOfflineProposal`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT, IN loanTypeId INT)
BEGIN

	DECLARE vb_role_id INT;
	DECLARE vb_branch_id INT;
	DECLARE vb_org_id INT;
	SELECT `user_role_id`,`branch_id`,`user_org_id` INTO vb_role_id,vb_branch_id,vb_org_id FROM users.`users` WHERE `user_id` = userId;

	SET @vb_query = CONCAT("SELECT ipd.application_id, cl.user_id, fs.name, usr.email, usr.mobile, ipd.created_date, ipd.branch_id, branch.name AS branchname, branch.contact_person_name,
		branch.telephone_no, branch.contact_person_number, org.organisation_name, lam.application_code, branch.code, branch.street_name,
		stat.`state_name`, cit.`city_name`,
		branch.premises_no, branch.contact_person_email,");

	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT(@vb_query," coApp.organisation_name AS companyName ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT(@vb_query," CONCAT(coApp.`first_name`,' ',coApp.`middle_name`,' ',coApp.`last_name`) ");
	END IF;

	IF (loanTypeId = 1)THEN
		SET @vb_query = CONCAT( @vb_query , " ,CASE WHEN prm.purpose_of_loan_id = 1 THEN 'Term Loan' WHEN prm.purpose_of_loan_id = 2 THEN 'Working Capital' ELSE 'NA' END AS loanType");
	END IF;

	IF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT( @vb_query , " ,(CASE WHEN cl.loan_type_id = 7 THEN
			'Personal Loan' WHEN cl.loan_type_id = 3 THEN 'Home Loan' ELSE 'NA' END) AS loanType ") ;
	END IF;

	SET @vb_query = CONCAT(@vb_query,",IF(cl.`wc_renewal_status` = 2,'Renewal','New') AS rewType,
		IF(camp.`id` IS NULL,'Market Place','Bank Specific') AS source
		FROM `loan_application`.`ineligible_proposal_details` ipd ");
	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT(@vb_query, "LEFT JOIN `loan_application`.`fs_corporate_applicant_details` coApp ON coApp.application_id = ipd.application_id and coApp.`proposal_mapping_id` IS NULL
			 LEFT JOIN `loan_application`.`fs_corporate_primary_details` prm ON prm.`application_id` = ipd.application_id ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT(@vb_query, "LEFT JOIN `loan_application`.fs_retail_applicant_details coApp ON coApp.application_id = ipd.application_id and coApp.`proposal_mapping_id` IS NULL");
	END IF;

	SET @vb_query = CONCAT(@vb_query, " LEFT JOIN `connect`.`connect_log` cl ON cl.application_id = ipd.application_id and cl.`proposal_id` IS NULL
		LEFT JOIN `users`.`users` usr ON usr.user_id = cl.user_id
		LEFT JOIN `users`.`fund_seeker_details` fs ON fs.user_id = usr.user_id
		LEFT JOIN `users`.`branch_master` branch ON branch.id = ipd.branch_id
		LEFT JOIN `users`.`user_organisation_master` org ON org.user_org_id = ipd.user_org_id
		LEFT JOIN `loan_application`.`fs_loan_application_master` lam ON lam.application_id = ipd.application_id
		LEFT JOIN `one_form`.`state` stat ON stat.id = branch.`state_id`
		LEFT JOIN `one_form`.`city` cit ON cit.id = branch.`city_id`
		LEFT JOIN users.`campaign_details` camp ON camp.`user_id` = cl.`user_id` AND camp.`is_active` = TRUE
		WHERE ipd.is_active = TRUE AND ipd.user_org_id = '",vb_org_id,"' AND (ipd.created_date BETWEEN '",fromDate,"' AND '",toDate,"') ");

	IF (loanTypeId = 1) THEN
		SET @vb_query = CONCAT(@vb_query, " AND cl.`business_type_id` = 1 ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_query = CONCAT(@vb_query, " AND cl.`loan_type_id` = ", loanTypeId);
	END IF;


	IF (vb_role_id = 8 OR vb_role_id = 9) THEN
		SET @vb_query = CONCAT(@vb_query," AND ipd.branch_id = ",vb_branch_id, " GROUP BY ipd.application_id ORDER BY ipd.id DESC");
	ELSEIF vb_role_id = 5 THEN
		SET @vb_query = CONCAT(@vb_query," GROUP BY ipd.application_id ORDER BY ipd.id DESC");
	ELSE
		SET @vb_query = "select '' from dual";
	END IF;

	-- select @vb_query from dual;
	PREPARE stmt1 FROM @vb_query;
	EXECUTE stmt1;
    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminSanctionedReport`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminSanctionedReport`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT,IN pageNumber INTEGER,IN totalCount INTEGER,IN branchId INT, IN isSanctionedFrom INTEGER,IN isFromReport BOOLEAN,IN loanTypeId INT)
BEGIN

	DECLARE vb_role_id INT;
	DECLARE vb_branch_id INT;
	DECLARE vb_org_id INT;
	SELECT `user_role_id`,`branch_id`,`user_org_id` INTO vb_role_id,vb_branch_id,vb_org_id FROM users.`users`  WHERE `user_id` = userId;


	SET @vb_report_query = CONCAT("SELECT CAST(JSON_ARRAYAGG(JSON) AS CHAR) FROM (SELECT JSON_OBJECT('applicationId',s.`application_id`,'sanctionedAmount',
		s.`sanction_amount`,'sanctionedDate', s.`sanction_date`,
		'tenure',s.`tenure`,'roi', s.`roi`,'processingFees', s.`processing_fee`,'remark', s.`remark`,'email', u.`email`,
		'mobile',u.`mobile`,'applicationCode', `loan`.`application_code`,'gstin', l.`gstin`,'orgId', s.org_id,'branchName', br.`name`,
		'branchCode',br.`code`,'branchAddress', br.`street_name`,
		'branchState',state.`state_name`,'branchCity', city.`city_name`,'contactPersonName', br.`contact_person_name`,
		'contactPersonEmail',br.`contact_person_email`,'contactPersonNumber', br.`contact_person_number`,");
	IF (loanTypeId = 1) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,"'typeOfLoan', co.`purpose_of_loan_id`,'companyName',cpApp.`organisation_name`,");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,"'typeOfLoan', loanMst.`product_id`,'companyName',CONCAT(cpApp.`first_name`,' ',cpApp.`middle_name`,' ',cpApp.`last_name`),");
	END IF;



	SET @vb_report_query = CONCAT(@vb_report_query,"'isSanctionedFrom',IF(s.`is_sanctioned_from` = 1,'Online',IF(s.`is_sanctioned_from` = 2,'Offline',IF(s.`is_sanctioned_from` = 3 OR s.`is_sanctioned_from` = 21 OR s.`is_sanctioned_from` = 31,'Reverse API','NA'))),
		'wcRenewalStatus', IF(l.`wc_renewal_status` = 2,'Renewal','New')) AS JSON
		FROM `loan_application`.`sanction_detail` s
		LEFT JOIN `loan_application`.`proposal_details` proposal ON proposal.`application_id` = s.`application_id` AND proposal.`user_org_id` = s.`org_id`
		LEFT JOIN `connect`.`connect_log` l ON l.`application_id` = s.`application_id` AND l.`proposal_id` = proposal.id");

	IF (loanTypeId = 1) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,	" LEFT JOIN loan_application.`fs_corporate_applicant_details` cpApp ON cpApp.application_id = s.`application_id` AND cpApp.`proposal_mapping_id` = proposal.`id`
		 LEFT JOIN `loan_application`.`fs_corporate_primary_details` co ON co.`application_id` = s.`application_id`");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,	" LEFT JOIN loan_application.`fs_retail_applicant_details` cpApp ON cpApp.application_id = s.`application_id` AND cpApp.`proposal_mapping_id` = proposal.`id`
		 LEFT JOIN loan_application.`fs_loan_application_master` loanMst ON loanMst.`application_id` = s.`application_id`");
	END IF;

	SET @vb_report_query = CONCAT(@vb_report_query,	" LEFT JOIN users.`users` u ON l.`user_id` = u.`user_id`
		LEFT JOIN loan_application.`application_proposal_mapping` loan ON loan.`application_id` = proposal.`application_id` AND loan.`proposal_id` = proposal.`id`
		LEFT JOIN users.`branch_master` br ON br.`id` = s.`branch`
		LEFT JOIN one_form.`state` state ON state.id = br.`state_id`
		LEFT JOIN `one_form`.`city` city ON city.`id` = br.`city_id`
		LEFT JOIN users.`fund_seeker_details` fs ON fs.`user_id` = l.`user_id`
		LEFT JOIN users.`campaign_details` cm ON `cm`.`user_id` = u.`user_id` AND cm.`is_active` = TRUE
		WHERE (proposal.id IS NULL OR ((proposal.`proposal_status_id` IS NULL OR proposal.`proposal_status_id` NOT IN (3,4)) AND proposal.`is_active` = TRUE)) AND s.id IN ( ");

	SET @vb_sub_report_query = CONCAT("SELECT sll.`id` FROM `loan_application`.`sanction_detail` sll
		LEFT JOIN loan_application.`fs_loan_application_master` con ON con.`application_id` = sll.`application_id`
		WHERE sll.`is_active` = TRUE AND sll.`created_date`BETWEEN '",fromDate,"' AND '",toDate,"' AND sll.org_id = ",vb_org_id);

	IF (loanTypeId = 1) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query,	" AND con.`business_type_id`=1");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query,	" AND con.`product_id`= ", loanTypeId);
	END IF;

	IF ((branchId IS NOT NULL) AND (branchId > 0)) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query," AND sll.`branch` = ",branchId);
	END IF;

	IF ((isSanctionedFrom IS NOT NULL) AND (isSanctionedFrom > 0)) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query," AND sll.`is_sanctioned_from` = ",isSanctionedFrom);
	END IF;


	IF (isFromReport = TRUE) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query,"  ORDER BY sll.`sanction_date` DESC ) GROUP BY s.`application_id`) AS tes");
	ELSE
		SET @vb_sub_report_query = CONCAT("SELECT * FROM ( ",@vb_sub_report_query," ORDER BY sll.`sanction_date` DESC LIMIT ", pageNumber, ",", totalCount,") tmp ) GROUP BY s.`application_id`) AS tes");
	END IF;

	SET @vb_report_query = CONCAT(@vb_report_query,@vb_sub_report_query);

	 PREPARE stmt1 FROM @vb_report_query;
 	EXECUTE stmt1;
	-- select @vb_report_query;
	-- select @vb_query from dual;
    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminHoldAndRejectCount`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminHoldAndRejectCount`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT,IN branchId INT, IN proposalType INTEGER,IN loanTypeId INTEGER)
BEGIN

	DECLARE vb_role_id INT;
	DECLARE vb_branch_id INT;
	DECLARE vb_org_id INT;
	SELECT `user_role_id`,`branch_id`,`user_org_id` INTO vb_role_id,vb_branch_id,vb_org_id FROM users.`users`  WHERE `user_id` = userId;


	SET @vb_report_query = CONCAT("SELECT COUNT(*) FROM `loan_application`.`proposal_details` s
		LEFT JOIN loan_application.`fs_loan_application_master` con ON con.`application_id` = s.`application_id`
		WHERE s.`is_active` = TRUE  AND s.user_org_id =" , vb_org_id , "
		AND s.`modified_date` BETWEEN '",fromDate,"' AND '",toDate,"'
		AND s.`proposal_status_id` = ",proposalType);

	IF (loanTypeId = 1) THEN
		SET @vb_report_query = CONCAT(@vb_report_query," AND con.`business_type_id`=1 ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_report_query = CONCAT(@vb_report_query," AND con.`product_id`=", loanTypeId);
	END IF;

	IF ((branchId IS NOT NULL) AND (branchId > 0)) THEN
		SET @vb_report_query = CONCAT(@vb_report_query," AND s.`branch_id` = ",branchId);
	END IF;

	-- select @vb_query from dual;
	PREPARE stmt1 FROM @vb_report_query;
	EXECUTE stmt1;
    END$$

DELIMITER ;

DELIMITER $$

USE `loan_application`$$

DROP PROCEDURE IF EXISTS `spFetchBankAdminHoldAndReject`$$

CREATE DEFINER=`dbsidbi`@`%` PROCEDURE `spFetchBankAdminHoldAndReject`(IN fromDate DATETIME,IN toDate DATETIME,IN userId INT,IN pageNumber INTEGER,IN totalCount INTEGER,IN branchId INT,IN isFromReport BOOLEAN,IN proposalType INTEGER,IN loanTypeId INTEGER)
BEGIN

	DECLARE vb_role_id INT;
	DECLARE vb_branch_id INT;
	DECLARE vb_org_id INT;
	SELECT `user_role_id`,`branch_id`,`user_org_id` INTO vb_role_id,vb_branch_id,vb_org_id FROM users.`users`  WHERE `user_id` = userId;


	SET @vb_report_query = CONCAT("SELECT CAST(JSON_ARRAYAGG(JSON_OBJECT('applicationId',s.`application_id`,
		'email',u.`email`,'mobile', u.`mobile`,'applicationCode', `loan`.`application_code`,'gstin', l.`gstin`,'organizationName', o.`organisation_name`,
		'branchName',br.`name`,'branchCode', br.`code`,'branchAddress',br.`street_name`,'branchState', state.`state_name`,
		'branchCity',city.`city_name`,'contactPersonName', br.`contact_person_name`,'contactPersonEmail', br.`contact_person_email`,'contactPersonNumber', br.`contact_person_number`, ");

	IF (loanTypeId = 1) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,"'typeOfLoan', co.`purpose_of_loan_id`,'companyName',cpApp.`organisation_name`,");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,"'typeOfLoan', loanMst.`product_id`,'companyName',CONCAT(cpApp.`first_name`,' ',cpApp.`middle_name`,' ',cpApp.`last_name`),");
	END IF;

	SET @vb_report_query = CONCAT(@vb_report_query,"'name', fs.`NAME`, 'isFromCampaign',(IF(ISNULL(cm.`code`),false,true)), 'campaignCode',cm.`code`,'inPrincipleDate',l.`In_principle_date`,'loanApplicationDate',loan.`created_date`,
		'elAmount',s.`el_amount`,'roi',s.`el_roi`,'tenure',s.`el_tenure`,'processingFees',s.`processing_fee`,'proposalModifiedDate',s.`modified_date`,'remark',s.`reason`,
		'proposalStage',s.`proposal_stage`)) AS CHAR) AS JSON
		FROM `loan_application`.`proposal_details` s
		LEFT JOIN `connect`.`connect_log` l ON l.`application_id` = s.`application_id` and l.`proposal_id` = s.`id`");

	IF (loanTypeId = 1) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,	" LEFT JOIN loan_application.`fs_corporate_applicant_details` cpApp ON cpApp.application_id = s.`application_id` AND cpApp.`proposal_mapping_id` = s.`id`
		 LEFT JOIN `loan_application`.`fs_corporate_primary_details` co ON co.`application_id` = s.`application_id`");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_report_query = CONCAT(@vb_report_query,	" LEFT JOIN loan_application.`fs_retail_applicant_details` cpApp ON cpApp.application_id = s.`application_id` AND cpApp.`proposal_mapping_id` = s.`id`
		 LEFT JOIN loan_application.`fs_loan_application_master` loanMst ON loanMst.`application_id` = s.`application_id`");
	END IF;

	SET @vb_report_query = CONCAT(@vb_report_query,"LEFT JOIN users.`users` u ON l.`user_id` = u.`user_id`
		LEFT JOIN loan_application.`application_proposal_mapping` loan ON loan.`application_id` = s.`application_id` AND loan.`proposal_id` = s.`id`
		LEFT JOIN users.`user_organisation_master` o ON s.`user_org_id` = o.`user_org_id`
		LEFT JOIN users.`branch_master` br ON br.`id` = s.`branch_id`
		LEFT JOIN one_form.`state` state ON state.id = br.`state_id`
		LEFT JOIN `one_form`.`city` city ON city.`id` = br.`city_id`
		LEFT JOIN users.`fund_seeker_details` fs ON fs.`user_id` = l.`user_id`
		LEFT JOIN users.`campaign_details` cm ON `cm`.`user_id` = u.`user_id` AND cm.`is_active` = TRUE
		WHERE s.id IN ( ");

	SET @vb_sub_report_query = CONCAT("SELECT sll.`id` FROM `loan_application`.`proposal_details` sll
		LEFT JOIN loan_application.`fs_loan_application_master` con ON con.`application_id` = sll.`application_id`
		WHERE sll.`is_active` = TRUE
		AND sll.`modified_date`BETWEEN '",fromDate,"' AND '",toDate,"' AND sll.user_org_id = ",vb_org_id," AND sll.`proposal_status_id` =",proposalType);

	IF (loanTypeId = 1) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query," AND con.`business_type_id`=1 ");
	ELSEIF (loanTypeId = 3 OR loanTypeId = 7) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query," AND con.`product_id`=", loanTypeId);
	END IF;


	IF ((branchId IS NOT NULL) AND (branchId > 0)) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query," AND sll.`branch_id` = ",branchId);
	END IF;


	IF (isFromReport = TRUE) THEN
		SET @vb_sub_report_query = CONCAT(@vb_sub_report_query," ORDER BY sll.`modified_date` DESC ");
	ELSE
		SET @vb_sub_report_query = CONCAT("SELECT * FROM ( ",@vb_sub_report_query," ORDER BY sll.`modified_date` DESC LIMIT ", pageNumber, ",", totalCount,") tmp");
	END IF;
	SET @vb_report_query = CONCAT(@vb_report_query,@vb_sub_report_query,")");

	PREPARE stmt1 FROM @vb_report_query;
	EXECUTE stmt1;
    END$$

DELIMITER ;